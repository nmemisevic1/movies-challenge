{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nexport function useAxiosGet(url, pageNumber, query) {\n  _s();\n\n  console.log(query);\n  console.log(url);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [titles, setTitles] = useState([]);\n  const [hasMore, setHasMore] = useState(false);\n  useEffect(() => {\n    setTitles([]);\n  }, [url, query]);\n  useEffect(() => {\n    setLoading(true);\n    setError(false);\n    let cancel;\n    axios({\n      method: 'GET',\n      url: url + \"&page=\" + pageNumber,\n      cancelToken: new axios.CancelToken(c => cancel = c)\n    }).then(res => {\n      setTitles(prevTitles => {\n        console.log(prevTitles);\n        return [...new Set([...prevTitles, ...res.data.results])];\n      });\n      setHasMore(res.data.page < res.data.total_pages);\n      setLoading(false);\n    }).catch(e => {\n      if (axios.isCancel(e)) return;\n      setError(true);\n      setLoading(false);\n    });\n    return () => cancel();\n  }, [url, query, pageNumber]);\n  return {\n    loading,\n    error,\n    titles,\n    hasMore\n  };\n}\n\n_s(useAxiosGet, \"9RRJIvjyJMTNKFJQDAo5I1DKtbI=\");\n\nexport function useSpecificTitleGet(url) {\n  _s2();\n\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    setLoading(true);\n    setError(false);\n    axios.get(url).then(res => {\n      setData(res.data);\n    }).catch(() => {\n      setError(true);\n    });\n  });\n  return {\n    loading,\n    error,\n    data\n  };\n}\n\n_s2(useSpecificTitleGet, \"ee9ujOb6z5RKErnqd9IMZIGl9ko=\");","map":{"version":3,"sources":["/home/nedim/misija-challenge/src/Hooks/HttpsRequests.js"],"names":["useEffect","useState","axios","useAxiosGet","url","pageNumber","query","console","log","loading","setLoading","error","setError","titles","setTitles","hasMore","setHasMore","cancel","method","cancelToken","CancelToken","c","then","res","prevTitles","Set","data","results","page","total_pages","catch","e","isCancel","useSpecificTitleGet","setData","get"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\nimport axios from 'axios'\n\nexport function useAxiosGet(url, pageNumber, query) {\n    console.log(query)\n    console.log(url)\n    const [loading, setLoading] = useState(true)\n    const [error, setError] = useState(false)\n    const [titles, setTitles] = useState([])\n    const [hasMore, setHasMore] = useState(false)\n\n    useEffect(() => {\n        setTitles([])\n    }, [url,query])\n\n    useEffect(() => {\n        setLoading(true)\n        setError(false)\n        let cancel\n        axios({\n            method: 'GET',\n            url: url + \"&page=\" + pageNumber,\n            cancelToken: new axios.CancelToken(c => cancel = c)\n        }).then(res => {\n            setTitles(prevTitles => {\n                console.log(prevTitles)\n                return [...new Set([...prevTitles, ...res.data.results])]\n            })\n            setHasMore(res.data.page < res.data.total_pages)\n            setLoading(false)\n        }).catch(e => {\n            if (axios.isCancel(e)) return\n            setError(true)\n            setLoading(false)\n        })\n        return () => cancel()\n    }, [url, query, pageNumber])\n\n    return { loading, error, titles, hasMore }\n}\nexport function useSpecificTitleGet(url){\n    const [loading, setLoading] = useState(true)\n    const [error, setError] = useState(false)\n    const [data, setData] = useState([])\n\n    useEffect(() => {\n        setLoading(true)\n        setError(false)\n        axios.get(url).then(res =>{\n            setData(res.data)\n        }).catch(() => {\n            setError(true)\n        })\n    })\n\n    return {loading,error,data}\n}"]},"metadata":{},"sourceType":"module"}