{"ast":null,"code":"var _jsxFileName = \"/home/nedim/misija-challenge/src/components/Movies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useCallback } from 'react';\nimport TitleGridItem from './Titles/TitleGridItem';\nimport { Row, Alert, Spinner } from 'react-bootstrap';\nimport axios from 'axios';\nimport { useAxiosGet } from '../Hooks/HttpsRequests';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Movies() {\n  _s();\n\n  const [pageNumber, setPageNumber] = useState(1);\n  const url = \"https://api.themoviedb.org/3/trending/movie/day?api_key=1e732b8b29336f4c9263a24d54a86994\";\n  let movies = useAxiosGet(url, pageNumber);\n  let content = null;\n  const observer = useRef();\n  const lastMovieElementRef = useCallback(node => {\n    console.log(node);\n    if (movies.loading) return false;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      console.log(movies.hasMore);\n\n      if (entries[0].isIntersecting && movies.hasMore) {\n        setPageNumber(prevPageNumber => prevPageNumber + 1);\n      }\n    });\n    if (node) observer.current.observe(node);\n  }, [movies.loading, movies.hasMore]);\n\n  if (movies.error) {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        children: \"There was an error! :(\"\n      }, 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 19\n    }, this);\n  }\n\n  if (movies.loading) {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"grow\",\n        variant: \"info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 19\n    }, this);\n  }\n\n  if (movies.titles) {\n    content = movies.titles.map((movie, index) => {\n      if (movies.titles.length === index + 1) return /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: lastMovieElementRef,\n        children: /*#__PURE__*/_jsxDEV(TitleGridItem, {\n          movie: movie\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 106\n        }, this)\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 60\n      }, this);else return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TitleGridItem, {\n          movie: movie\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 45\n        }, this)\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        inline: true,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          onChange: handleSearch,\n          type: \"text\",\n          placeholder: \"Search\",\n          className: \"mr-sm-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), content]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Movies, \"PzeWOgGAI1Bdj+oQbMfLxaj+y/I=\", false, function () {\n  return [useAxiosGet];\n});\n\n_c = Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["/home/nedim/misija-challenge/src/components/Movies.js"],"names":["React","useState","useRef","useCallback","TitleGridItem","Row","Alert","Spinner","axios","useAxiosGet","Movies","pageNumber","setPageNumber","url","movies","content","observer","lastMovieElementRef","node","console","log","loading","current","disconnect","IntersectionObserver","entries","hasMore","isIntersecting","prevPageNumber","observe","error","titles","map","movie","index","length","id","handleSearch"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useCallback } from 'react'\nimport TitleGridItem from './Titles/TitleGridItem'\nimport { Row, Alert, Spinner } from 'react-bootstrap'\nimport axios from 'axios'\nimport { useAxiosGet } from '../Hooks/HttpsRequests'\n\n\nexport default function Movies() {\n    const [pageNumber, setPageNumber] = useState(1)\n\n    const url = \"https://api.themoviedb.org/3/trending/movie/day?api_key=1e732b8b29336f4c9263a24d54a86994\"\n    let movies = useAxiosGet(url, pageNumber)\n\n    let content = null;\n\n    const observer = useRef()\n    const lastMovieElementRef = useCallback(\n        (node) => {\n            console.log(node)\n            if (movies.loading) return false\n            if (observer.current) observer.current.disconnect()\n            observer.current = new IntersectionObserver(entries => {\n                console.log(movies.hasMore)\n                if (entries[0].isIntersecting && movies.hasMore) {\n                    setPageNumber(prevPageNumber => prevPageNumber + 1)\n                }\n            })\n            if (node) observer.current.observe(node)\n        },\n        [movies.loading, movies.hasMore],\n    )\n    if (movies.error) {\n        content = <div>\n            <Alert key={1} variant='danger'>There was an error! :(</Alert>\n        </div>\n    }\n    if (movies.loading) {\n        content = <div>\n            <Spinner animation=\"grow\" variant=\"info\" />\n        </div>\n    }\n    if (movies.titles) {\n\n        content = movies.titles.map((movie, index) => {\n            if (movies.titles.length === index + 1) return <div key={movie.id} ref={lastMovieElementRef}><TitleGridItem movie={movie} /></div>\n            else return <div key={movie.id}><TitleGridItem movie={movie} /></div>\n        }\n\n        )\n    }\n\n    return (\n        <div>\n            <Row>\n                <h1>Movies</h1>\n                <Form inline>\n                    <FormControl onChange={handleSearch} type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n                </Form>\n                {content}\n            </Row>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}