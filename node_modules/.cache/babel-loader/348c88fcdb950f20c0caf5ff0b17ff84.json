{"ast":null,"code":"var _jsxFileName = \"/home/nedim/misija-challenge/src/components/Movies.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport TitleGridItem from './Titles/TitleGridItem';\nimport { Row, Alert, Spinner } from 'react-bootstrap';\nimport axios from 'axios';\nimport { useAxiosGet } from '../Hooks/HttpsRequests';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Movies() {\n  _s();\n\n  const [pageNumber, setPageNumber] = useState(1);\n  const url = \"https://api.themoviedb.org/3/trending/movie/day?api_key=1e732b8b29336f4c9263a24d54a86994\";\n  let movies = useAxiosGet(url);\n  let content = null;\n  const observer = useRef();\n  const lastMovieElementRef = useCallback(node => {\n    if (loading) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && movies.hasMore) {\n        setPageNumber(prevPageNumber => prevPageNumber + 1);\n      }\n    });\n    if (node) observer.current.observe(node);\n  }, [input]);\n\n  if (movies.error) {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        children: \"There was an error! :(\"\n      }, 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 19\n    }, this);\n  }\n\n  if (movies.loading) {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"grow\",\n        variant: \"info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 19\n    }, this);\n  }\n\n  if (movies.data) {\n    let data = Array.from(movies.data.results);\n    console.log(data);\n    content = data.map(movie => /*#__PURE__*/_jsxDEV(TitleGridItem, {\n      movie: movie\n    }, movie.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Movies, \"PzeWOgGAI1Bdj+oQbMfLxaj+y/I=\", false, function () {\n  return [useAxiosGet];\n});\n\n_c = Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["/home/nedim/misija-challenge/src/components/Movies.js"],"names":["React","TitleGridItem","Row","Alert","Spinner","axios","useAxiosGet","Movies","pageNumber","setPageNumber","useState","url","movies","content","observer","useRef","lastMovieElementRef","useCallback","node","loading","current","disconnect","IntersectionObserver","entries","isIntersecting","hasMore","prevPageNumber","observe","input","error","data","Array","from","results","console","log","map","movie","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,SAAQC,GAAR,EAAYC,KAAZ,EAAmBC,OAAnB,QAAiC,iBAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,wBAA5B;;AAGA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC7B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BC,QAAQ,CAAC,CAAD,CAA5C;AAEA,QAAMC,GAAG,GAAG,0FAAZ;AACA,MAAIC,MAAM,GAAGN,WAAW,CAACK,GAAD,CAAxB;AAEA,MAAIE,OAAO,GAAG,IAAd;AAEA,QAAMC,QAAQ,GAAGC,MAAM,EAAvB;AACA,QAAMC,mBAAmB,GAAGC,WAAW,CAClCC,IAAD,IAAU;AACN,QAAGC,OAAH,EAAY;AACZ,QAAIL,QAAQ,CAACM,OAAb,EAAsBN,QAAQ,CAACM,OAAT,CAAiBC,UAAjB;AACtBP,IAAAA,QAAQ,CAACM,OAAT,GAAmB,IAAIE,oBAAJ,CAAyBC,OAAO,IAAI;AACnD,UAAGA,OAAO,CAAC,CAAD,CAAP,CAAWC,cAAX,IAA6BZ,MAAM,CAACa,OAAvC,EAA+C;AAC3ChB,QAAAA,aAAa,CAACiB,cAAc,IAAIA,cAAc,GAAG,CAApC,CAAb;AACH;AACJ,KAJkB,CAAnB;AAKA,QAAGR,IAAH,EAASJ,QAAQ,CAACM,OAAT,CAAiBO,OAAjB,CAAyBT,IAAzB;AACZ,GAVkC,EAWnC,CAACU,KAAD,CAXmC,CAAvC;;AAaA,MAAGhB,MAAM,CAACiB,KAAV,EAAgB;AACZhB,IAAAA,OAAO,gBAAG;AAAA,6BACN,QAAC,KAAD;AAAe,QAAA,OAAO,EAAC,QAAvB;AAAA;AAAA,SAAY,CAAZ;AAAA;AAAA;AAAA;AAAA;AADM;AAAA;AAAA;AAAA;AAAA,YAAV;AAGH;;AACD,MAAGD,MAAM,CAACO,OAAV,EAAkB;AACdN,IAAAA,OAAO,gBAAG;AAAA,6BACN,QAAC,OAAD;AAAS,QAAA,SAAS,EAAC,MAAnB;AAA0B,QAAA,OAAO,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA;AADM;AAAA;AAAA;AAAA;AAAA,YAAV;AAGH;;AACD,MAAGD,MAAM,CAACkB,IAAV,EAAe;AACX,QAAIA,IAAI,GAAGC,KAAK,CAACC,IAAN,CAAWpB,MAAM,CAACkB,IAAP,CAAYG,OAAvB,CAAX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACAjB,IAAAA,OAAO,GAAGiB,IAAI,CAACM,GAAL,CAAUC,KAAD,iBACX,QAAC,aAAD;AAA8B,MAAA,KAAK,EAAEA;AAArC,OAAoBA,KAAK,CAACC,EAA1B;AAAA;AAAA;AAAA;AAAA,YADE,CAAV;AAGH;;AAED,sBACI;AAAA,2BACI,QAAC,GAAD;AAAA,gBACKzB;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GA/CuBN,M;UAIPD,W;;;KAJOC,M","sourcesContent":["import React from 'react'\nimport TitleGridItem from './Titles/TitleGridItem'\nimport {Row,Alert, Spinner} from 'react-bootstrap'\nimport axios from 'axios'\nimport { useAxiosGet } from '../Hooks/HttpsRequests'\n\n\nexport default function Movies() {\n    const [pageNumber, setPageNumber] = useState(1)\n\n    const url = \"https://api.themoviedb.org/3/trending/movie/day?api_key=1e732b8b29336f4c9263a24d54a86994\"\n    let movies = useAxiosGet(url)\n\n    let content = null;\n\n    const observer = useRef()\n    const lastMovieElementRef = useCallback(\n        (node) => {\n            if(loading) return\n            if (observer.current) observer.current.disconnect()\n            observer.current = new IntersectionObserver(entries => {\n                if(entries[0].isIntersecting && movies.hasMore){\n                    setPageNumber(prevPageNumber => prevPageNumber + 1)\n                }\n            })\n            if(node) observer.current.observe(node)\n        },\n        [input],\n    )\n    if(movies.error){\n        content = <div>\n            <Alert key={1} variant='danger'>There was an error! :(</Alert>\n        </div>\n    }\n    if(movies.loading){\n        content = <div>\n            <Spinner animation=\"grow\" variant=\"info\" />\n        </div>\n    }\n    if(movies.data){\n        let data = Array.from(movies.data.results);\n        console.log(data)\n        content = data.map((movie) => \n                <TitleGridItem key={movie.id} movie={movie}/>\n        )\n    }\n\n    return (\n        <div>\n            <Row>\n                {content}\n            </Row>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}