{"ast":null,"code":"var _jsxFileName = \"/home/nedim/misija-challenge/src/components/TvShows.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useCallback } from 'react';\nimport TitleGridItem from './Titles/TitleGridItem';\nimport { Row, Alert, Spinner, Form, FormControl } from 'react-bootstrap';\nimport { useAxiosGet } from '../Hooks/HttpsRequests';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TvShows() {\n  _s();\n\n  const [pageNumber, setPageNumber] = useState(1);\n  const [query, setQuery] = useState(\"\");\n  const [url, setUrl] = useState(\"https://api.themoviedb.org/3/trending/tv/day?api_key=1e732b8b29336f4c9263a24d54a86994\");\n  let urlAxios = url;\n  let series = useAxiosGet(urlAxios, pageNumber, query);\n  let content = null;\n  const observer = useRef();\n  const lastSerieElementRef = useCallback(node => {\n    if (series.loading) return false;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && series.hasMore) {\n        setPageNumber(prevPageNumber => prevPageNumber + 1);\n      }\n    });\n    if (node) observer.current.observe(node);\n  }, [series.loading, series.hasMore]);\n\n  if (series.error) {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        children: \"There was an error! :(\"\n      }, 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 19\n    }, this);\n  }\n\n  if (series.loading) {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"grow\",\n        variant: \"info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 19\n    }, this);\n  }\n\n  if (series.titles) {\n    content = series.titles.map((serie, index) => {\n      if (series.titles.length === index + 1) return /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: lastSerieElementRef,\n        children: /*#__PURE__*/_jsxDEV(TitleGridItem, {\n          title: serie,\n          tv: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 106\n        }, this)\n      }, serie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 60\n      }, this);else return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TitleGridItem, {\n          title: serie,\n          tv: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 45\n        }, this)\n      }, serie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }, this);\n    });\n  }\n\n  function handleSearch(e) {\n    if (e.target.value == \"\") setUrl(\"https://api.themoviedb.org/3/trending/tv/day?api_key=1e732b8b29336f4c9263a24d54a86994\");else {\n      let urlQuery = \"https://api.themoviedb.org/3/search/tv?api_key=1e732b8b29336f4c9263a24d54a86994\" + \"&query=\" + e.target.value;\n      setUrl(urlQuery);\n      setPageNumber(1);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tv Shows\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      inline: true,\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        onChange: handleSearch,\n        type: \"text\",\n        placeholder: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TvShows, \"769u4xJ5uUDc+LLpPAJQY8v311s=\", false, function () {\n  return [useAxiosGet];\n});\n\n_c = TvShows;\n\nvar _c;\n\n$RefreshReg$(_c, \"TvShows\");","map":{"version":3,"sources":["/home/nedim/misija-challenge/src/components/TvShows.js"],"names":["React","useState","useRef","useCallback","TitleGridItem","Row","Alert","Spinner","Form","FormControl","useAxiosGet","TvShows","pageNumber","setPageNumber","query","setQuery","url","setUrl","urlAxios","series","content","observer","lastSerieElementRef","node","loading","current","disconnect","IntersectionObserver","entries","isIntersecting","hasMore","prevPageNumber","observe","error","titles","map","serie","index","length","id","handleSearch","e","target","value","urlQuery"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useCallback } from 'react'\nimport TitleGridItem from './Titles/TitleGridItem'\nimport { Row, Alert, Spinner, Form, FormControl} from 'react-bootstrap'\nimport { useAxiosGet } from '../Hooks/HttpsRequests'\n\n\nexport default function TvShows() {\n    const [pageNumber, setPageNumber] = useState(1)\n    const [query, setQuery] = useState(\"\")\n    const [url, setUrl] = useState(\"https://api.themoviedb.org/3/trending/tv/day?api_key=1e732b8b29336f4c9263a24d54a86994\")\n\n\n    let urlAxios = url;\n    let series = useAxiosGet(urlAxios, pageNumber, query)\n\n    let content = null;\n\n    const observer = useRef()\n    const lastSerieElementRef = useCallback(\n        (node) => {\n\n            if (series.loading) return false\n            if (observer.current) observer.current.disconnect()\n            observer.current = new IntersectionObserver(entries => {\n                if (entries[0].isIntersecting && series.hasMore) {\n                    setPageNumber(prevPageNumber => prevPageNumber + 1)\n                }\n            })\n            if (node) observer.current.observe(node)\n        },\n        [series.loading, series.hasMore],\n    )\n\n\n    if (series.error) {\n        content = <div>\n            <Alert key={1} variant='danger'>There was an error! :(</Alert>\n        </div>\n    }\n    if (series.loading) {\n        content = <div>\n            <Spinner animation=\"grow\" variant=\"info\" />\n        </div>\n    }\n    if (series.titles) {\n\n        content = series.titles.map((serie, index) => {\n            if (series.titles.length === index + 1) return <div key={serie.id} ref={lastSerieElementRef}><TitleGridItem title={serie} tv={true} /></div>\n            else return <div key={serie.id}><TitleGridItem title={serie} tv={true}/></div>\n        })\n    }\n    function handleSearch(e) {\n        if (e.target.value == \"\") setUrl(\"https://api.themoviedb.org/3/trending/tv/day?api_key=1e732b8b29336f4c9263a24d54a86994\")\n        else {\n            let urlQuery = \"https://api.themoviedb.org/3/search/tv?api_key=1e732b8b29336f4c9263a24d54a86994\" + \"&query=\" + e.target.value;\n            setUrl(urlQuery);\n            setPageNumber(1)\n        }\n    }\n    return (\n        <div>\n            <h1>Tv Shows</h1>\n\n            <Form inline>\n                <FormControl onChange={handleSearch} type=\"text\" placeholder=\"Search\" />\n            </Form>\n            <Row>\n                {content}\n            </Row>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}