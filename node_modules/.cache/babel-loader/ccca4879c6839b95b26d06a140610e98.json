{"ast":null,"code":"var _jsxFileName = \"/home/nedim/misija-challenge/src/components/Movies.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport TitleGridItem from './Titles/TitleGridItem';\nimport { Row, Alert, Spinner } from 'react-bootstrap';\nimport axios from 'axios';\nimport { useAxiosGet } from '../Hooks/HttpsRequests';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Movies() {\n  _s();\n\n  const url = \"https://api.themoviedb.org/3/trending/all/day?api_key=1e732b8b29336f4c9263a24d54a86994\";\n  let movies = useAxiosGet(url);\n  let content = null;\n\n  if (movies.error) {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        children: \"There was an error! :(\"\n      }, 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 19\n    }, this);\n  }\n\n  if (movies.loading) {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"grow\",\n        variant: \"info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 19\n    }, this);\n  }\n\n  if (movies.data) {\n    let data = Array.from(movies.data);\n    content = data;\n    /*content = data.map((movie) => <div key={movie.id}>\n            <TitleGridItem movie={movie}/>\n    </div>)*/\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Movies, \"uTlKqSzpIkFXIa2UQzGi/lSHKpk=\", false, function () {\n  return [useAxiosGet];\n});\n\n_c = Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["/home/nedim/misija-challenge/src/components/Movies.js"],"names":["React","TitleGridItem","Row","Alert","Spinner","axios","useAxiosGet","Movies","url","movies","content","error","loading","data","Array","from"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,SAAQC,GAAR,EAAYC,KAAZ,EAAmBC,OAAnB,QAAiC,iBAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,wBAA5B;;AAGA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC7B,QAAMC,GAAG,GAAG,wFAAZ;AACA,MAAIC,MAAM,GAAGH,WAAW,CAACE,GAAD,CAAxB;AAEA,MAAIE,OAAO,GAAG,IAAd;;AAEA,MAAGD,MAAM,CAACE,KAAV,EAAgB;AACZD,IAAAA,OAAO,gBAAG;AAAA,6BACN,QAAC,KAAD;AAAe,QAAA,OAAO,EAAC,QAAvB;AAAA;AAAA,SAAY,CAAZ;AAAA;AAAA;AAAA;AAAA;AADM;AAAA;AAAA;AAAA;AAAA,YAAV;AAGH;;AACD,MAAGD,MAAM,CAACG,OAAV,EAAkB;AACdF,IAAAA,OAAO,gBAAG;AAAA,6BACN,QAAC,OAAD;AAAS,QAAA,SAAS,EAAC,MAAnB;AAA0B,QAAA,OAAO,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA;AADM;AAAA;AAAA;AAAA;AAAA,YAAV;AAGH;;AACD,MAAGD,MAAM,CAACI,IAAV,EAAe;AACX,QAAIA,IAAI,GAAGC,KAAK,CAACC,IAAN,CAAWN,MAAM,CAACI,IAAlB,CAAX;AACAH,IAAAA,OAAO,GAAGG,IAAV;AACA;AACR;AACA;AACK;;AAED,sBACI;AAAA,2BACI,QAAC,GAAD;AAAA,gBACKH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GA/BuBH,M;UAEPD,W;;;KAFOC,M","sourcesContent":["import React from 'react'\nimport TitleGridItem from './Titles/TitleGridItem'\nimport {Row,Alert, Spinner} from 'react-bootstrap'\nimport axios from 'axios'\nimport { useAxiosGet } from '../Hooks/HttpsRequests'\n\n\nexport default function Movies() {\n    const url = \"https://api.themoviedb.org/3/trending/all/day?api_key=1e732b8b29336f4c9263a24d54a86994\"\n    let movies = useAxiosGet(url)\n\n    let content = null;\n\n    if(movies.error){\n        content = <div>\n            <Alert key={1} variant='danger'>There was an error! :(</Alert>\n        </div>\n    }\n    if(movies.loading){\n        content = <div>\n            <Spinner animation=\"grow\" variant=\"info\" />\n        </div>\n    }\n    if(movies.data){\n        let data = Array.from(movies.data);\n        content = data\n        /*content = data.map((movie) => <div key={movie.id}>\n                <TitleGridItem movie={movie}/>\n        </div>)*/\n    }\n\n    return (\n        <div>\n            <Row>\n                {content}\n            </Row>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}